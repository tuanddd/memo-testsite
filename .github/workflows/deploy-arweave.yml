name: Deploy Markdown to Arweave

on: workflow_dispatch

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository with submodules
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history to determine changed files
          submodules: "recursive" # Checkout submodules recursively
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update submodules
        run: |
          git submodule update --init --recursive
          git submodule foreach git checkout master || true
          git submodule foreach git pull origin master || true

      - name: Get changed files
        id: changed-files
        run: |
          # Store the last commit hash before submodule update
          BEFORE_UPDATE=$(git rev-parse HEAD)

          # Get the list of submodules
          SUBMODULES=$(git submodule status | awk '{print $2}')

          # Initialize empty array for changed files
          CHANGED_FILES=""

          # First check main repository changes
          MAIN_CHANGES=$(git diff --name-only HEAD~1 HEAD | grep '\.md$' || echo "")
          CHANGED_FILES="$CHANGED_FILES $MAIN_CHANGES"

          # Then check each submodule for changes
          for SUBMODULE in $SUBMODULES; do
            if [ -d "$SUBMODULE" ]; then
              cd $SUBMODULE
              SUB_CHANGES=$(git diff --name-only HEAD~1 HEAD 2>/dev/null | grep '\.md$' || echo "")
              if [ -n "$SUB_CHANGES" ]; then
                # Prefix each change with the submodule path
                for FILE in $SUB_CHANGES; do
                  CHANGED_FILES="$CHANGED_FILES $SUBMODULE/$FILE"
                done
              fi
              cd - > /dev/null
            fi
          done

          # Trim and format the output
          CHANGED_FILES=$(echo "$CHANGED_FILES" | xargs)
          echo "Found changed markdown files: $CHANGED_FILES"
          echo "files=$CHANGED_FILES" >> $GITHUB_OUTPUT

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install arweave gray-matter crypto js-yaml tsx

      - name: Create wallet file
        run: |
          echo '${{ secrets.ARWEAVE_WALLET_JSON }}' > wallet.json
          chmod 600 wallet.json

      - name: Process markdown files
        id: deploy
        if: steps.changed-files.outputs.files != ''
        run: |
          npx tsx deploy-arweave.ts ${{ steps.changed-files.outputs.files }}

      - name: Configure Git for submodule
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Commit changes in submodules
        if: steps.deploy.outputs.deployments != ''
        run: |
          # Add and commit all changes in all submodules
          git submodule foreach 'git add -A && git diff --staged --quiet || git commit -m "Add Arweave IDs to deployed markdown files"'

          # Push changes in all submodules
          git submodule foreach 'git push || echo "No changes to push in this submodule"'

      - name: Commit changes in master repository
        if: steps.deploy.outputs.deployments != ''
        run: |
          git add -A
          git commit -m "Add Arweave IDs to deployed markdown files" || echo "No changes to commit in master repo"
          git push

      - name: Update submodule reference
        if: steps.deploy.outputs.deployments != ''
        run: |
          git add -A
          git commit -m "Update submodule reference" || echo "No submodule changes to commit"
          git push

      - name: Display deployment results
        if: steps.deploy.outputs.deployments != ''
        run: |
          echo "Deployed files to Arweave:"
          echo '${{ steps.deploy.outputs.deployments }}' | jq -r '.[]| "File: \(.file)\nArweave ID: \(.id)\nURL: https://\(.id).arweave.net\n"'
